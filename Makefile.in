SRCDIR = src
INCLUDEDIR = include
TESTSRCDIR = test

LIBSOURCES = $(wildcard $(SRCDIR)/*.cpp)
TESTSOURCES = $(wildcard $(TESTSRCDIR)/*.cpp)

FULLFLAGS = -I$(INCLUDEDIR)
MT_FULLDIR = $(OBJDIR)/full_mt
MT_FULLLIB = $(LIBDIR)/libshaga_mt.a
MT_FULLOBJS = $(addprefix $(MT_FULLDIR)/, $(LIBSOURCES:.cpp=.o))
MT_FULLFLAGS = $(FULLFLAGS) -include shaga_mt.h

ST_FULLDIR = $(OBJDIR)/full_st
ST_FULLLIB = $(LIBDIR)/libshaga_st.a
ST_FULLOBJS = $(addprefix $(ST_FULLDIR)/, $(LIBSOURCES:.cpp=.o))
ST_FULLFLAGS = $(FULLFLAGS) -include shaga_st.h

LITEFLAGS = -I$(INCLUDEDIR)
MT_LITEDIR = $(OBJDIR)/lite_mt
MT_LITELIB = $(LIBDIR)/libshagalite_mt.a
MT_LITEOBJS = $(addprefix $(MT_LITEDIR)/, $(LIBSOURCES:.cpp=.o))
MT_LITEFLAGS = $(LITEFLAGS) -include shagalite_mt.h

ST_LITEDIR = $(OBJDIR)/lite_st
ST_LITELIB = $(LIBDIR)/libshagalite_st.a
ST_LITEOBJS = $(addprefix $(ST_LITEDIR)/, $(LIBSOURCES:.cpp=.o))
ST_LITEFLAGS = $(LITEFLAGS) -include shagalite_st.h

DEBUGFLAGS = -g -I$(INCLUDEDIR)
MT_DEBUGDIR = $(OBJDIR)/debug_mt
MT_DEBUGLIB = $(LIBDIR)/libshaga_mt_debug.a
MT_DEBUGOBJS = $(addprefix $(MT_DEBUGDIR)/, $(LIBSOURCES:.cpp=.o))
MT_DEBUGFLAGS = $(DEBUGFLAGS) -include shaga_mt.h

ST_DEBUGDIR = $(OBJDIR)/debug_st
ST_DEBUGLIB = $(LIBDIR)/libshaga_st_debug.a
ST_DEBUGOBJS = $(addprefix $(ST_DEBUGDIR)/, $(LIBSOURCES:.cpp=.o))
ST_DEBUGFLAGS = $(DEBUGFLAGS) -include shaga_st.h

TESTFLAGS = -g -I$(INCLUDEDIR)
TESTLIBS = -lgtest
MT_TESTDIR = $(OBJDIR)/test_mt
MT_TESTBIN = $(BINDIR)/test_mt.$(BINEXT)
MT_TESTOBJS = $(addprefix $(MT_TESTDIR)/, $(TESTSOURCES:.cpp=.o))
MT_TESTFLAGS = $(TESTFLAGS) -include shaga_mt.h
MT_TESTLIBS = $(TESTLIBS)

ST_TESTDIR = $(OBJDIR)/test_st
ST_TESTBIN = $(BINDIR)/test_st.$(BINEXT)
ST_TESTOBJS = $(addprefix $(ST_TESTDIR)/, $(TESTSOURCES:.cpp=.o))
ST_TESTFLAGS = $(TESTFLAGS) -include shaga_st.h
ST_TESTLIBS = $(TESTLIBS)

.PHONY: all lib test prep clean distclean remake debug_mt debug_st full_mt full_st lite_mt lite_st test_mt test_st install install_debug

all: debug_mt debug_st full_mt full_st lite_mt lite_st test_mt test_st

lib: full_mt full_st lite_mt lite_st

test: test_mt test_st

prep:
	$(MKDIR) $(MT_FULLDIR)/$(SRCDIR)
	$(MKDIR) $(ST_FULLDIR)/$(SRCDIR)
	$(MKDIR) $(MT_LITEDIR)/$(SRCDIR)
	$(MKDIR) $(ST_LITEDIR)/$(SRCDIR)
	$(MKDIR) $(MT_DEBUGDIR)/$(SRCDIR)
	$(MKDIR) $(ST_DEBUGDIR)/$(SRCDIR)
	$(MKDIR) $(MT_TESTDIR)/$(TESTSRCDIR)
	$(MKDIR) $(ST_TESTDIR)/$(TESTSRCDIR)
	$(MKDIR) $(LIBDIR)
	$(MKDIR) $(BINDIR)

clean:
	$(RM) $(MT_FULLLIB) $(MT_FULLOBJS) $(MT_LITELIB) $(MT_LITEOBJS) $(MT_DEBUGLIB) $(MT_DEBUGOBJS) $(MT_TESTBIN) $(MT_TESTOBJS)
	$(RM) $(ST_FULLLIB) $(ST_FULLOBJS) $(ST_LITELIB) $(ST_LITEOBJS) $(ST_DEBUGLIB) $(ST_DEBUGOBJS) $(ST_TESTBIN) $(ST_TESTOBJS)

distclean: clean
	$(RM) -r $(LIBDIR)/
	$(RM) -r $(OBJDIR)/
	$(RM) -r $(BINDIR)/

remake: | clean all

#############################################################################
## DEBUG                                                                   ##
#############################################################################
# Multi thread
debug_mt: | prep $(MT_DEBUGLIB)

$(MT_DEBUGLIB): $(MT_DEBUGOBJS)
	$(RM) $@
	$(AR) rcsD $@ $^

$(MT_DEBUGDIR)/%.o:%.cpp
	$(GPP) $(MT_CPPFLAGS) $(MT_DEBUGFLAGS) -c $< -o $@

# Single thread
debug_st: | prep $(ST_DEBUGLIB)

$(ST_DEBUGLIB): $(ST_DEBUGOBJS)
	$(RM) $@
	$(AR) rcsD $@ $^

$(ST_DEBUGDIR)/%.o:%.cpp
	$(GPP) $(ST_CPPFLAGS) $(ST_DEBUGFLAGS) -c $< -o $@

#############################################################################
## FULL                                                                    ##
#############################################################################
# Multi thread
full_mt: | prep $(MT_FULLLIB)

$(MT_FULLLIB): $(MT_FULLOBJS)
	$(RM) $@
	$(STRIP) $^
	$(AR) rcsD $@ $^

$(MT_FULLDIR)/%.o:%.cpp
	$(GPP) $(MT_CPPFLAGS) $(MT_FULLFLAGS) -c $< -o $@

# Single thread
full_st: | prep $(ST_FULLLIB)

$(ST_FULLLIB): $(ST_FULLOBJS)
	$(RM) $@
	$(STRIP) $^
	$(AR) rcsD $@ $^

$(ST_FULLDIR)/%.o:%.cpp
	$(GPP) $(ST_CPPFLAGS) $(ST_FULLFLAGS) -c $< -o $@

#############################################################################
## LITE                                                                    ##
#############################################################################
# Multi thread
lite_mt: | prep $(MT_LITELIB)

$(MT_LITELIB): $(MT_LITEOBJS)
	$(RM) $@
	$(STRIP) $^
	$(AR) rcsD $@ $^

$(MT_LITEDIR)/%.o:%.cpp
	$(GPP) $(MT_CPPFLAGS) $(MT_LITEFLAGS) -c $< -o $@

# Single thread
lite_st: | prep $(ST_LITELIB)

$(ST_LITELIB): $(ST_LITEOBJS)
	$(RM) $@
	$(STRIP) $^
	$(AR) rcsD $@ $^

$(ST_LITEDIR)/%.o:%.cpp
	$(GPP) $(ST_CPPFLAGS) $(ST_LITEFLAGS) -c $< -o $@

#############################################################################
## TEST                                                                    ##
#############################################################################
# Multi thread
test_mt: | debug_mt $(MT_TESTBIN)

$(MT_TESTBIN): $(MT_TESTOBJS) $(MT_DEBUGLIB)
	$(GPP) $(MT_LDFLAGS) $(MT_TESTFLAGS) $^ $(MT_LIBS) $(MT_TESTLIBS) -o $@

$(MT_TESTDIR)/%.o:%.cpp
	$(GPP) $(MT_CPPFLAGS) $(MT_TESTFLAGS) -c $< -o $@

# Single thread
test_st: | debug_st $(ST_TESTBIN)

$(ST_TESTBIN): $(ST_TESTOBJS) $(ST_DEBUGLIB)
	$(GPP) $(ST_LDFLAGS) $(ST_TESTFLAGS) $^ $(ST_LIBS) $(ST_TESTLIBS) -o $@

$(ST_TESTDIR)/%.o:%.cpp
	$(GPP) $(ST_CPPFLAGS) $(ST_TESTFLAGS) -c $< -o $@

#############################################################################
## Install                                                                 ##
#############################################################################
install: full_mt full_st lite_mt lite_st
	$(CP) -av ./include/* $(DESTINCLUDE)
	$(CP) -v $(MT_FULLLIB) $(DESTLIB)
	$(CP) -v $(ST_FULLLIB) $(DESTLIB)
	$(CP) -v $(MT_LITELIB) $(DESTLIB)
	$(CP) -v $(ST_LITELIB) $(DESTLIB)

install_debug: debug_mt debug_st
	$(CP) -av ./include/* $(DESTINCLUDE)
	$(CP) -v $(MT_DEBUGLIB) $(DESTLIB)
	$(CP) -v $(ST_DEBUGLIB) $(DESTLIB)
